#include <bits/stdc++.h>
#include<map>
using namespace std;
void firstRepeating(int arr1[], int arr2[], int n, int m);
int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n,m;
	    cin>>n>>m;
	    int arr1[n], arr2[m];
	    for(int i=0;i<n;i++)
	    cin>>arr1[i];
	    for(int i=0;i<m;i++)
	    cin>>arr2[i];
	    firstRepeating(arr1, arr2, n, m);
	    
	    cout<<endl;
	    
	}
	return 0;
}
/*This is a function problem.You only need to complete the function given below*/

// Function to print the non repeated elements in the array
// arr[]: input array
// n: size of array
void firstRepeating(int arr1[], int arr2[], int n, int m)
{
    unordered_map<int, int> mp; 
    for (int i = 0; i < n; i++) {
        mp[arr1[i]] = 1; 
    }
    for(int i=0; i < m; i++){
        mp[arr2[i]]++;
    }
    // Traverse array again and return 
    // first element with count 1.
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (mp[arr1[i]] > 1) {
            count += 1;
            mp[arr1[i]] = -1;
        }
    }
    cout<<count;

}
